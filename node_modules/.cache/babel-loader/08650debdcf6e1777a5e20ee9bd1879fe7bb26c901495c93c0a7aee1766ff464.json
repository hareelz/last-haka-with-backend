{"ast":null,"code":"var _jsxFileName = \"/Users/elzar/js/makers/last-hakaton/src/components/Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationList = () => {\n  _s();\n  const {\n    pages\n  } = useSelector(state => state.product);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    setSearchParams({\n      page: currentPage\n    });\n  }, [currentPage]);\n  function getPagesCount() {\n    const pageCountArr = [];\n    for (let i = 1; i <= pages; i++) {\n      pageCountArr.push(i);\n    }\n    return pageCountArr;\n  }\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => setCurrentPage(currentPage - 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), getPagesCount().map(item => item === currentPage ? /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      onClick: () => setCurrentPage(item),\n      active: true,\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      onClick: () => setCurrentPage(item),\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => setCurrentPage(currentPage + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PaginationList, \"GMir8NXOJwCIGSEVBcvbKyHJAyE=\", false, function () {\n  return [useSelector, useSearchParams];\n});\n_c = PaginationList;\nexport default PaginationList;\nvar _c;\n$RefreshReg$(_c, \"PaginationList\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","useSelector","useSearchParams","jsxDEV","_jsxDEV","PaginationList","_s","pages","state","product","searchParams","setSearchParams","currentPage","setCurrentPage","page","getPagesCount","pageCountArr","i","push","children","Prev","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Item","active","Next","_c","$RefreshReg$"],"sources":["/Users/elzar/js/makers/last-hakaton/src/components/Pagination.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pagination } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\n\nconst PaginationList = () => {\n  const { pages } = useSelector((state) => state.product);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setSearchParams({\n      page: currentPage,\n    });\n  }, [currentPage]);\n\n  function getPagesCount() {\n    const pageCountArr = [];\n\n    for (let i = 1; i <= pages; i++) {\n      pageCountArr.push(i);\n    }\n\n    return pageCountArr;\n  }\n\n  return (\n    <Pagination>\n      <Pagination.Prev onClick={() => setCurrentPage(currentPage - 1)} />\n      {getPagesCount().map((item) =>\n        item === currentPage ? (\n          <Pagination.Item\n            onClick={() => setCurrentPage(item)}\n            active\n            key={item}\n          >\n            {item}\n          </Pagination.Item>\n        ) : (\n          <Pagination.Item onClick={() => setCurrentPage(item)} key={item}>\n            {item}\n          </Pagination.Item>\n        )\n      )}\n      <Pagination.Next onClick={() => setCurrentPage(currentPage + 1)} />\n    </Pagination>\n  );\n};\n\nexport default PaginationList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAEvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,eAAe,CAAC,CAAC;EAEzD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACda,eAAe,CAAC;MACdG,IAAI,EAAEF;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,SAASG,aAAaA,CAAA,EAAG;IACvB,MAAMC,YAAY,GAAG,EAAE;IAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIV,KAAK,EAAEU,CAAC,EAAE,EAAE;MAC/BD,YAAY,CAACE,IAAI,CAACD,CAAC,CAAC;IACtB;IAEA,OAAOD,YAAY;EACrB;EAEA,oBACEZ,OAAA,CAACJ,UAAU;IAAAmB,QAAA,gBACTf,OAAA,CAACJ,UAAU,CAACoB,IAAI;MAACC,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACD,WAAW,GAAG,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEV,aAAa,CAAC,CAAC,CAACW,GAAG,CAAEC,IAAI,IACxBA,IAAI,KAAKf,WAAW,gBAClBR,OAAA,CAACJ,UAAU,CAAC4B,IAAI;MACdP,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACc,IAAI,CAAE;MACpCE,MAAM;MAAAV,QAAA,EAGLQ;IAAI,GAFAA,IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGM,CAAC,gBAElBrB,OAAA,CAACJ,UAAU,CAAC4B,IAAI;MAACP,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACc,IAAI,CAAE;MAAAR,QAAA,EAClDQ;IAAI,GADoDA,IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9C,CAErB,CAAC,eACDrB,OAAA,CAACJ,UAAU,CAAC8B,IAAI;MAACT,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACD,WAAW,GAAG,CAAC;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEjB,CAAC;AAACnB,EAAA,CA5CID,cAAc;EAAA,QACAJ,WAAW,EAEWC,eAAe;AAAA;AAAA6B,EAAA,GAHnD1B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}