{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API } from \"../../helpers/consts\";\nimport { getConfig } from \"../../helpers/functions\";\nexport const registerFreelance = createAsyncThunk(\"authFreelancer/registerFreeLance\", async newUser => {\n  try {\n    await axios.post(`${API}/v1/freelancer/register/`, newUser);\n  } catch (error) {\n    throw error;\n  }\n});\nexport const loginFreeLance = createAsyncThunk(\"authFreelancer/loginFreeLance\", async userData => {\n  try {\n    const result = await axios.post(`${API}/v1/freelancer/login/`, userData);\n    localStorage.setItem(\"tokens\", JSON.stringify(result.data));\n    localStorage.setItem(\"email\", userData.email);\n    console.log(result);\n    return userData.email;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getCategories = createAsyncThunk(\"authFreeLancer/getCategories\", async () => {\n  try {\n    const result = await axios.get(`${API}/v1/category/`);\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const logoutFreeLance = () => {\n  localStorage.removeItem(\"tokens\");\n  localStorage.removeItem(\"email\");\n};\nexport const checkAuthFreeLance = createAsyncThunk(\"authFreelancer/checkAuth\", async () => {\n  try {\n    const tokens = JSON.parse(localStorage.getItem(\"tokens\"));\n    const Authorization = `Bearer ${tokens.access}`;\n    const config = {\n      headers: {\n        Authorization\n      }\n    };\n    const result = await axios.post(`${API}/v1/freelancer/refresh/`, {\n      refresh: tokens.refresh\n    }, config);\n    localStorage.setItem(\"tokens\", JSON.stringify({\n      access: result.data.access,\n      refresh: tokens.refresh\n    }));\n  } catch (error) {\n    logoutFreeLance();\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API","getConfig","registerFreelance","newUser","post","error","loginFreeLance","userData","result","localStorage","setItem","JSON","stringify","data","email","console","log","getCategories","get","logoutFreeLance","removeItem","checkAuthFreeLance","tokens","parse","getItem","Authorization","access","config","headers","refresh"],"sources":["/Users/elzar/js/makers/last-haka/src/store/actions/authActionsFreeLance.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API } from \"../../helpers/consts\";\nimport { getConfig } from \"../../helpers/functions\";\n\nexport const registerFreelance = createAsyncThunk(\n  \"authFreelancer/registerFreeLance\",\n  async (newUser) => {\n    try {\n      await axios.post(`${API}/v1/freelancer/register/`, newUser);\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const loginFreeLance = createAsyncThunk(\n  \"authFreelancer/loginFreeLance\",\n  async (userData) => {\n    try {\n      const result = await axios.post(`${API}/v1/freelancer/login/`, userData);\n      localStorage.setItem(\"tokens\", JSON.stringify(result.data));\n      localStorage.setItem(\"email\", userData.email);\n      console.log(result);\n      return userData.email;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const getCategories = createAsyncThunk(\n  \"authFreeLancer/getCategories\",\n  async () => {\n    try {\n      const result = await axios.get(`${API}/v1/category/`);\n      return result.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const logoutFreeLance = () => {\n  localStorage.removeItem(\"tokens\");\n  localStorage.removeItem(\"email\");\n};\n\nexport const checkAuthFreeLance = createAsyncThunk(\n  \"authFreelancer/checkAuth\",\n  async () => {\n    try {\n      const tokens = JSON.parse(localStorage.getItem(\"tokens\"));\n\n      const Authorization = `Bearer ${tokens.access}`;\n\n      const config = {\n        headers: {\n          Authorization,\n        },\n      };\n\n      const result = await axios.post(\n        `${API}/v1/freelancer/refresh/`,\n        {\n          refresh: tokens.refresh,\n        },\n        config\n      );\n\n      localStorage.setItem(\n        \"tokens\",\n        JSON.stringify({\n          access: result.data.access,\n          refresh: tokens.refresh,\n        })\n      );\n    } catch (error) {\n      logoutFreeLance();\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,OAAO,MAAMC,iBAAiB,GAAGJ,gBAAgB,CAC/C,kCAAkC,EAClC,MAAOK,OAAO,IAAK;EACjB,IAAI;IACF,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,GAAI,0BAAyB,EAAEG,OAAO,CAAC;EAC7D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAC5C,+BAA+B,EAC/B,MAAOS,QAAQ,IAAK;EAClB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMT,KAAK,CAACK,IAAI,CAAE,GAAEJ,GAAI,uBAAsB,EAAEO,QAAQ,CAAC;IACxEE,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAACK,IAAI,CAAC,CAAC;IAC3DJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACO,KAAK,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;IACnB,OAAOD,QAAQ,CAACO,KAAK;EACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMY,aAAa,GAAGnB,gBAAgB,CAC3C,8BAA8B,EAC9B,YAAY;EACV,IAAI;IACF,MAAMU,MAAM,GAAG,MAAMT,KAAK,CAACmB,GAAG,CAAE,GAAElB,GAAI,eAAc,CAAC;IACrD,OAAOQ,MAAM,CAACK,IAAI;EACpB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMc,eAAe,GAAGA,CAAA,KAAM;EACnCV,YAAY,CAACW,UAAU,CAAC,QAAQ,CAAC;EACjCX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGvB,gBAAgB,CAChD,0BAA0B,EAC1B,YAAY;EACV,IAAI;IACF,MAAMwB,MAAM,GAAGX,IAAI,CAACY,KAAK,CAACd,YAAY,CAACe,OAAO,CAAC,QAAQ,CAAC,CAAC;IAEzD,MAAMC,aAAa,GAAI,UAASH,MAAM,CAACI,MAAO,EAAC;IAE/C,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACPH;MACF;IACF,CAAC;IAED,MAAMjB,MAAM,GAAG,MAAMT,KAAK,CAACK,IAAI,CAC5B,GAAEJ,GAAI,yBAAwB,EAC/B;MACE6B,OAAO,EAAEP,MAAM,CAACO;IAClB,CAAC,EACDF,MACF,CAAC;IAEDlB,YAAY,CAACC,OAAO,CAClB,QAAQ,EACRC,IAAI,CAACC,SAAS,CAAC;MACbc,MAAM,EAAElB,MAAM,CAACK,IAAI,CAACa,MAAM;MAC1BG,OAAO,EAAEP,MAAM,CAACO;IAClB,CAAC,CACH,CAAC;EACH,CAAC,CAAC,OAAOxB,KAAK,EAAE;IACdc,eAAe,CAAC,CAAC;EACnB;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}