{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API } from \"../../helpers/consts\";\nimport { getConfig } from \"../../helpers/functions\";\nexport const getFreelancer = createAsyncThunk(\"products/getFreelancer\", async () => {\n  try {\n    const result = await axios.get(`${API}/v1/freelancer/` + window.location.search, getConfig());\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getCategories = createAsyncThunk(\"products/getCategories\", async () => {\n  try {\n    const result = await axios.get(`${API}/v1/category/`, getConfig());\n    return result.data.results;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const createFreelancer = createAsyncThunk(\"products/createFreelancer\", async newProduct => {\n  try {\n    await axios.post(`${API}/v1/freelancer/`, newProduct, getConfig());\n  } catch (error) {\n    throw error;\n  }\n});\nexport const deleteFreelancer = createAsyncThunk(\"products/deleteFreelancer\", async (id, thunkAPI) => {\n  try {\n    await axios.delete(`${API}/v1/freelancer/${id}/`, getConfig());\n    thunkAPI.dispatch(getProducts());\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getOneFreelancer = createAsyncThunk(\"products/getOneFreelancer\", async id => {\n  try {\n    const result = await axios.get(`${API}/v1/freelancer/${id}/`, getConfig());\n    return result.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const updateFreelancer = createAsyncThunk(\"products/updateProduct\", async editedProduct => {\n  try {\n    await axios.patch(`${API}/v1/freelancer/${editedProduct.get(\"id\")}/`, editedProduct, getConfig());\n  } catch (error) {\n    throw error;\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","API","getConfig","getFreelancer","result","get","window","location","search","data","error","getCategories","results","createFreelancer","newProduct","post","deleteFreelancer","id","thunkAPI","delete","dispatch","getProducts","getOneFreelancer","updateFreelancer","editedProduct","patch"],"sources":["/Users/elzar/js/makers/last-haka/src/store/actions/freelancerActions.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { API } from \"../../helpers/consts\";\nimport { getConfig } from \"../../helpers/functions\";\n\nexport const getFreelancer = createAsyncThunk(\n  \"products/getFreelancer\",\n  async () => {\n    try {\n      const result = await axios.get(\n        `${API}/v1/freelancer/` + window.location.search,\n        getConfig()\n      );\n      return result.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const getCategories = createAsyncThunk(\n  \"products/getCategories\",\n  async () => {\n    try {\n      const result = await axios.get(`${API}/v1/category/`, getConfig());\n      return result.data.results;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const createFreelancer = createAsyncThunk(\n  \"products/createFreelancer\",\n  async (newProduct) => {\n    try {\n      await axios.post(`${API}/v1/freelancer/`, newProduct, getConfig());\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const deleteFreelancer = createAsyncThunk(\n  \"products/deleteFreelancer\",\n  async (id, thunkAPI) => {\n    try {\n      await axios.delete(`${API}/v1/freelancer/${id}/`, getConfig());\n      thunkAPI.dispatch(getProducts());\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const getOneFreelancer = createAsyncThunk(\n  \"products/getOneFreelancer\",\n  async (id) => {\n    try {\n      const result = await axios.get(\n        `${API}/v1/freelancer/${id}/`,\n        getConfig()\n      );\n\n      return result.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n\nexport const updateFreelancer = createAsyncThunk(\n  \"products/updateProduct\",\n  async (editedProduct) => {\n    try {\n      await axios.patch(\n        `${API}/v1/freelancer/${editedProduct.get(\"id\")}/`,\n        editedProduct,\n        getConfig()\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,OAAO,MAAMC,aAAa,GAAGJ,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,IAAI;IACF,MAAMK,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC3B,GAAEJ,GAAI,iBAAgB,GAAGK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAChDN,SAAS,CAAC,CACZ,CAAC;IACD,OAAOE,MAAM,CAACK,IAAI;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGZ,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,IAAI;IACF,MAAMK,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEJ,GAAI,eAAc,EAAEC,SAAS,CAAC,CAAC,CAAC;IAClE,OAAOE,MAAM,CAACK,IAAI,CAACG,OAAO;EAC5B,CAAC,CAAC,OAAOF,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGd,gBAAgB,CAC9C,2BAA2B,EAC3B,MAAOe,UAAU,IAAK;EACpB,IAAI;IACF,MAAMd,KAAK,CAACe,IAAI,CAAE,GAAEd,GAAI,iBAAgB,EAAEa,UAAU,EAAEZ,SAAS,CAAC,CAAC,CAAC;EACpE,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMM,gBAAgB,GAAGjB,gBAAgB,CAC9C,2BAA2B,EAC3B,OAAOkB,EAAE,EAAEC,QAAQ,KAAK;EACtB,IAAI;IACF,MAAMlB,KAAK,CAACmB,MAAM,CAAE,GAAElB,GAAI,kBAAiBgB,EAAG,GAAE,EAAEf,SAAS,CAAC,CAAC,CAAC;IAC9DgB,QAAQ,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOX,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMY,gBAAgB,GAAGvB,gBAAgB,CAC9C,2BAA2B,EAC3B,MAAOkB,EAAE,IAAK;EACZ,IAAI;IACF,MAAMb,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC3B,GAAEJ,GAAI,kBAAiBgB,EAAG,GAAE,EAC7Bf,SAAS,CAAC,CACZ,CAAC;IAED,OAAOE,MAAM,CAACK,IAAI;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAGxB,gBAAgB,CAC9C,wBAAwB,EACxB,MAAOyB,aAAa,IAAK;EACvB,IAAI;IACF,MAAMxB,KAAK,CAACyB,KAAK,CACd,GAAExB,GAAI,kBAAiBuB,aAAa,CAACnB,GAAG,CAAC,IAAI,CAAE,GAAE,EAClDmB,aAAa,EACbtB,SAAS,CAAC,CACZ,CAAC;EACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}